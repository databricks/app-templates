import type { Tool } from 'ai';
import z from 'zod';

export const DATABRICKS_TOOL_CALL_ID = 'databricks-tool-call';

/**
 * The AI-SDK requires that tools used by the model are defined ahead of time.
 *
 * Since tool calls can be orchestrated by Databricks' agents we don't know the name, input, or output schemas
 * of the tools until the model is called.
 *
 * In the DatabricksProvider we transform all tool calls to fit this definition, and keep the
 * original name as part of the metadata. This allows us to parse any tool orchestrated by Databricks' agents,
 * while still being able to render the tool call and result in the UI, and pass it back to the model with the correct name.
 */
export const DATABRICKS_TOOL_DEFINITION: Tool<any, any> = {
  name: DATABRICKS_TOOL_CALL_ID,
  description: 'Databricks tool call',
  // The input and output schemas are dynamic since its generated by the model
  inputSchema: z.any(),
  outputSchema: z.any(),
};
